pipeline {
    agent any
    tools {nodejs "nodeLatest"}
    stages {
        stage('Deploy to development') { 
            steps {
                sh 'echo "Add build steps here"'
                sh 'git checkout dev'
                sh 'cd DevOpsAngular && npm install'
                sh 'cd DevOpsAngular && ng build --prod'
                withAWS(region:'ap-south-1', credentials:'asthachoudhary') {
                    s3Upload(bucket: 'angularbucket-dev', file:'DevOpsAngular/dist/DevOpsAngular')
                }
                emailext attachLog: true, body: 'Proceed or abort the deployment process at $RUN_DISPLAY_URL.', to: 'choudharyastha81@gmail.com', recipientProviders: [developers()], subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - Permission required for deploying to production.'
             }
        }
        stage('Deploy to production') {
            input{
              message 'Do you want to proceed the build to the next stage ??'
            }
            steps {
                sh 'echo "production build started"'
                 withAWS(region:'ap-south-1', credentials:'asthachoudhary') {
                    s3Download bucket: 'angularbucket-dev', file:'DevOpsAngular/dist/DevOpsAngular', force: true
                    s3Upload bucket: 'angularbucket-prod', file:'DevOpsAngular/dist/DevOpsAngular' 
                }
                emailext attachLog: true, body: 'We have successfully deployed to production, you can review the build console from the attached file. $RUN_DISPLAY_URL.', to : 'choudharyastha81@gmail.com', recipientProviders: [developers()], subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - Permission required for deploying to production.'
            }
        }
        stage("Commit changes back to production repo"){
            steps{
                //sh 'git checkout --track origin/dev'
                sh 'git checkout --track origin/master'
                sh 'git pull'
                sh 'git merge dev'
                withCredentials([usernamePassword(credentialsId: 'githubId', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                    sh('git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/choudharyastha/WebAppLTI' )
                }
            }
        }
    }
     post {
    // Clean after build
         always {
             cleanWs()
         }
     }
}
